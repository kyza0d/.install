#!/bin/bash

if [ $# -eq 0 ]; then
  echo "Please provide at least one argument: ./setup.sh [task1] [task2] ... [taskN]"
  exit 1
fi

# Define the tasks as functions
function install_software() {
  chmod +x "./software"
  "./software"
}

function install_oh_my_zsh() {
  sudo pacman -S --needed curl git zsh
  sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  chsh -s $(which zsh)
}

function build_neovim() {
  sudo pacman -S base-devel cmake unzip ninja curl
  git clone https://github.com/neovim/neovim
  cd neovim
  make CMAKE_BUILD_TYPE=RelWithDebInfo
  sudo make install
  cd ..
  rm -rf neovim
}

function install_yay() {
  git clone https://aur.archlinux.org/yay.git
  cd yay
  makepkg -si
  cd ..
  rm -rf yay
}

function install_rustup() {
  sudo pacman -S rustup
  rustup default nightly
}

function install_eww() {
  sudo pacman -S eww gtk-layer-shell pango gdk-pixbuf2 cairo glib2 gcc-libs glibc
  git clone https://github.com/elkowar/eww
  cd eww
  cargo build --release --no-default-features --features x11
  cd ./target/release
  chmod +x ./eww
  cp ./eww ~/.local/bin/
  cd ../../../
  rm -rf eww
}

# Check if "all" is a valid argument
if [ "$1" == "all" ]; then
  # Run all tasks
  tasks=(
    "install_software"
    "install_oh_my_zsh"
    "build_neovim"
    "install_yay"
    "install_rustup"
    "install_eww"
  )
  for task in "${tasks[@]}"; do
    $task
  done
else
  # Run the specified task(s)
  for arg in "$@"; do
    case $arg in
      "install_software") install_software ;;
      "install_oh_my_zsh") install_oh_my_zsh ;;
      "build_neovim") build_neovim ;;
      "install_yay") install_yay ;;
      "install_rustup") install_rustup ;;
      "install_eww") install_eww ;;
      *) echo "Invalid task: $arg" ;;
    esac
  done
fi
